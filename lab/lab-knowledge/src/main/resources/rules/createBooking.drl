package rules;
import com.rhc.lab.domain.BookingRequest;
import com.rhc.lab.domain.Booking;
import com.rhc.lab.domain.BookingStatus;
import com.rhc.lab.domain.Venue;
import java.util.Date;

dialect "java"

// XXX #1 - To fix the feature "Deny a Band to play with no opening time or closing time specified", 
// 		fill in the empty rule below to insert a "REVOKED" BookingStatus when the 
//		feature conditions are met.rule "Venue revokes requests with no open date"
	ruleflow-group "validate"
	when
	then
end

// XXX #2 - To fix the feature "Deny a Band to play with no opening time or closing time specified", 
// 		fill in the empty rule below to insert a "REVOKED" BookingStatus when the 
//		feature conditions are met.
rule "Venue revokes requests with no close date"
	ruleflow-group "validate"
	when
	then
end

rule "Create Booking from Booking Request"
	ruleflow-group "validate"
	when
		$obj:BookingRequest ()
	then
		Booking booking = new Booking($obj);
		insert(booking);
end

rule "Venue revokes unsuitable Performances"
	ruleflow-group "validate"
	when 
		$bookingRequest: BookingRequest()
		$venue: Venue(accomodations not contains $bookingRequest.performer.type)
	then
		insert(BookingStatus.REVOKED);
end

// XXX #3 - Using the below rule as a model, complete the rule edge case below 
//		to ensure that BookingRequests do not overlap with existing Bookings.
rule "Case 1 - Venue revokes requests for busy venues"
	ruleflow-group "validate"
	dialect "mvel"
	when
	then
end

rule "Case 2 - Venue revokes requests for busy venues"
	ruleflow-group "validate"
	dialect "mvel"
	when
		
		$bookingRequest: BookingRequest($venueName : venueName, $requestOpen : open, $requestClose : close)
		Booking(
					venueName == $venueName
					, $requestClose after open
					, $requestClose before close
		)
	then
		insert(BookingStatus.REVOKED);
end

// XXX #4 - Once all the other rules have run, 
//		fill in the empty rule below to check for existing BookingStatus objects 
//		on the knowledge session and insert a "CONFIRMED" status if there are none.
rule "Confirm booking if all validations pass"
	ruleflow-group "confirm"
	when 
	then
end



